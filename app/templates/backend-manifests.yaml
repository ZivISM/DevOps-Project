###############################################################################
# Backend Deployment
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  namespace: habitspace
  labels:
    {{- include "habitspace.labels" . | nindent 4 }}
    component: backend
  annotations:
    rollme: {{ randAlphaNum 5 | quote }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "habitspace.selectorLabels" . | nindent 6 }}
      component: backend
  template:
    metadata:
      labels:
        {{- include "habitspace.selectorLabels" . | nindent 8 }}
        component: backend
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.backend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.backend.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
        {{- toYaml .Values.backend.tolerations | nindent 8 }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          image: postgres:15
          command: ['sh', '-c', 
            'until pg_isready -h {{ .Release.Name }}-postgresql -p 5432; do echo "Waiting for PostgreSQL..."; sleep 2; done;']
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password
            - name: PGUSER
              value: {{ .Values.postgresql.auth.username }}
            - name: PGDATABASE
              value: {{ .Values.postgresql.auth.database }}
            - name: PGHOST
              value: {{ .Release.Name }}-postgresql
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.configMap.data.SERVER_PORT | default "5000" }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
            - secretRef:
                name: {{ .Release.Name }}-secrets
          env:
            - name: DB_HOST
              value: {{ .Release.Name }}-postgresql
            - name: DB_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password
          {{- with .Values.backend.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"] 

---

###############################################################################
# Backend Service
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.global.environment }}-backend-service
  namespace: habitspace
  labels:
    {{- include "habitspace.labels" . | nindent 4 }}
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: {{ .Values.configMap.data.SERVER_PORT | default "5000" }}
      targetPort: {{ .Values.configMap.data.SERVER_PORT | default "5000" }}
      protocol: TCP
      name: http
  selector:
    {{- include "habitspace.selectorLabels" . | nindent 4 }}
    component: backend 
