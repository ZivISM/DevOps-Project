# Global settings
global:
  environment: production
  namespace: default

# Frontend configuration
frontend:
  enabled: true
  replicaCount: 2
  image:
    repository: ################################
    tag: #####################################
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  ingress:
    enabled: true
    className: "alb"
    annotations:
      kubernetes.io/ingress.class: alb
    hosts:
      - host: app.example.com
        paths:
          - path: /
            pathType: Prefix

# Backend API configuration
backend:
  enabled: true
  replicaCount: 2
  image:
    repository: ################################
    tag: #####################################
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  ingress:
    enabled: true
    className: "alb"
    annotations:
      kubernetes.io/ingress.class: alb
    hosts:
      - host: api.example.com
        paths:
          - path: /
            pathType: Prefix
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilization: 80
    targetMemoryUtilization: 80
  
  pdb:
    enabled: true
    minAvailable: 1
  
  probes:
    liveness:
      enabled: true
      path: /health
      initialDelaySeconds: 30
      periodSeconds: 10
    readiness:
      enabled: true
      path: /ready
      initialDelaySeconds: 5
      periodSeconds: 5
  
  networkPolicy:
    enabled: true
    
  # Add init container configuration
  initContainers:
    enabled: true
    waitForDb:
      image: busybox:1.28
      command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-postgresql 5432; do echo waiting for database; sleep 2; done;']

# Database configuration
postgresql:
  enabled: true
  auth:
    username: #####################################
    password: #####################################
    database: #####################################
  primary:
    initdb:
      scripts:
        - content of 01_init_schema.sql
        - content of 02_seed_data.sql
    persistence:
      size: 10Gi
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# ConfigMap data
configMap:
  data:
    LOG_LEVEL: "info"
    CACHE_TTL: "3600"
    API_VERSION: "v1"
    CORS_ALLOWED_ORIGINS: "https://app.example.com"

# Secret data
secrets:
  data:
    JWT_SECRET: "your-jwt-secret"
    API_KEY: "your-api-key"
    REDIS_PASSWORD: "redis-password" 

monitoring:
  enabled: true
  prometheus:
    scrapeInterval: 15s
    path: /metrics 